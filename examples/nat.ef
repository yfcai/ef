. PRELUDE

id : ∀ι. ι → ι
id = λx : ι. x

const : ∀α β. α → β → α
const = λx : α. λy : β. x

. NATURAL NUMBERS

type Nat = ∀ν. ν → (ν → ν) → ν

zero : Nat
zero = const

succ : Nat → Nat
succ = λn : Nat. λx : σ. λf : σ → σ. f (n x f)

. PATTERN MATCHING ON NATURAL NUMBERS

type MatchNat = ∀φ. φ → (Nat → φ) → φ

matchNat : Nat → MatchNat
matchNat = λn : Nat.
  n (const : MatchNat)
           . ^^^^^^^^ mandatory ascription, must get rid of it somhow!
    (λy : MatchNat. λx : ξ. λf : Nat → ξ. f (y zero succ))

. USAGE

to-ℤ : Nat → ℤ
to-ℤ = λn : Nat. n 0 (+ 1)

three : Nat
three = (succ (succ (succ zero)))

to-ℤ (succ (succ (succ zero)))

pred : Nat → Nat
pred = λn : Nat. matchNat n ??? id

to-ℤ (pred three)

. rant about overcapturing

  inlineMatch : Nat → (MatchNat → MatchNat) → MatchNat
  inlineMatch = λn : Nat. n const

  This is still an issue. We're investigating in
  Experiments.MatchNatExperiment.
