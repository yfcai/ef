...const = λx : α. λy : β. x
...
...type Nat = ∀ν. ν → (ν → ν) → ν
...
...zero : Nat
...zero = const
...
...succ : Nat → Nat
...succ = λn : Nat. λx : σ. λf : σ → σ. f (n x f)
...
...type MatchNat = ∀φ. φ → (Nat → φ) → φ
...
....incompatible signature.
....declared:  (∀ν. ν → (ν → ν) → ν) → ∀φ. φ → ((∀ν. ν → (ν → ν) → ν) → φ) → φ
....actual:    (∀ν. ν → (ν → ν) → ν) → ∃φ ν. φ → ((ν → (ν → ν) → ν) → φ) → φ
...
....matchNat : Nat → MatchNat
....matchNat = λn : Nat.
....  n (λx : ξ. λf : Nat → ξ. x)
....    (λy : MatchNat. y)
...
...
f = (λx : ∀α. α. x : ∀β. β)
g-postulate : ∀γ. (γ → γ) → γ
g = g-postulate
h = g f

undefined : ∀α. α
z = undefined : ∀β. β

m-postulate : ∀ξ ν. ((ξ → ν) → (ξ → ν)) → (ξ → ν)
m = m-postulate

n-postulate : (∀α β. α → β) → (∀γ β. γ → β)
n = n-postulate

p = m n

.. rant TODO
.  1. figure out if m-postulate is the correct type of n const
.  2. work out why there're existentials if we apply m-postulate
.     to (MatchNat → MatchNat).
